{"version":3,"sources":["components/Menu.js","components/PairTable.js","hooks/useWebSocket.js","hooks/usePairsState.js","App.js","reportWebVitals.js","index.js"],"names":["Menu","props","anchorRef","open","onClose","children","Popper","anchorEl","current","role","undefined","transition","keepMounted","style","zIndex","TransitionProps","placement","Grow","transformOrigin","Paper","ClickAwayListener","onClickAway","MenuList","autoFocusItem","PairTable","data","columns","useTable","useSortBy","getTableProps","getTableBodyProps","headerGroups","rows","prepareRow","TableContainer","component","maxHeight","Table","stickyHeader","size","TableHead","map","headerGroup","TableRow","getHeaderGroupProps","headers","column","TableCell","getHeaderProps","getSortByToggleProps","render","isSorted","isSortedDesc","fontSize","TableBody","row","i","getRowProps","cells","cell","getCellProps","ReadyState","INIT","UPDATE","InitialState","pairs","all","Set","bnb","btc","alts","eth","xrp","trx","parsePairsData","list","item","s","entities","reduce","obj","union","setA","setB","_union","elem","add","reducer","state","action","type","payload","bnbPairs","filter","d","pm","btcPairs","altPairs","xrpPairs","q","ethPairs","trxPairs","Object","keys","newPairs","id","c","o","getPairName","b","getPriceChange","lastPrice","openPrice","toFixed","App","useReducer","dispatch","useCallback","usePairState","init","update","useEffect","stale","fetch","then","res","json","result","catch","url","options","onOpen","onMessage","onError","retryCounts","retryInterval","webSocketRef","useRef","useState","readyState","setReadyState","message","setMessage","reconnectCount","send","close","connect","console","log","WebSocket","addEventListener","removeListeners","reconnectTimeout","_onOpen","_onMessage","event","_onClose","setTimeout","_onError","clearTimeout","useWebSocket","socketState","useMemo","JSON","parse","allPairs","BNB","BTC","ALTS","XRP","ETH","TRX","category","setCategory","Header","accessor","altMenuRef","altMenuOpen","setAltMenuOpen","Container","fixed","maxWidth","Box","py","Grid","container","justify","xs","Typography","variant","alignItems","color","Button","onClick","disabled","Divider","spacing","onMouseOver","onMouseOut","ref","endIcon","MenuItem","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.dd115ed6.chunk.js","sourcesContent":["import React from \"react\";\nimport ClickAwayListener from \"@material-ui/core/ClickAwayListener\";\nimport Grow from \"@material-ui/core/Grow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport Popper from \"@material-ui/core/Popper\";\nimport MenuList from \"@material-ui/core/MenuList\";\n\nexport default function Menu(props) {\n  const { anchorRef, open, onClose = () => {}, children } = props;\n\n  return (\n    <Popper\n      open={open}\n      anchorEl={anchorRef.current}\n      role={undefined}\n      transition\n      keepMounted\n      style={{ zIndex: 10 }}\n    >\n      {({ TransitionProps, placement }) => (\n        <Grow\n          {...TransitionProps}\n          style={{\n            transformOrigin:\n              placement === \"bottom\" ? \"center top\" : \"center bottom\",\n          }}\n        >\n          <Paper>\n            <ClickAwayListener onClickAway={onClose}>\n              <MenuList autoFocusItem={open}>{children}</MenuList>\n            </ClickAwayListener>\n          </Paper>\n        </Grow>\n      )}\n    </Popper>\n  );\n}\n","import React from \"react\";\nimport { useTable, useSortBy } from \"react-table\";\nimport Table from \"@material-ui/core/Table\";\nimport TableBody from \"@material-ui/core/TableBody\";\nimport TableCell from \"@material-ui/core/TableCell\";\nimport TableContainer from \"@material-ui/core/TableContainer\";\nimport TableHead from \"@material-ui/core/TableHead\";\nimport TableRow from \"@material-ui/core/TableRow\";\nimport Paper from \"@material-ui/core/Paper\";\nimport ArrowDownwardIcon from \"@material-ui/icons/ArrowDownward\";\nimport ArrowUpwardIcon from \"@material-ui/icons/ArrowUpward\";\n\nexport default function PairTable(props) {\n  const { data, columns } = props;\n  const {\n    getTableProps,\n    getTableBodyProps,\n    headerGroups,\n    rows,\n    prepareRow,\n  } = useTable(\n    {\n      columns,\n      data,\n    },\n    useSortBy\n  );\n\n  return (\n    <TableContainer component={Paper} style={{ maxHeight: 600 }}>\n      <Table stickyHeader size=\"small\" {...getTableProps}>\n        <TableHead>\n          {headerGroups.map((headerGroup) => (\n            <TableRow {...headerGroup.getHeaderGroupProps()}>\n              {headerGroup.headers.map((column) => (\n                <TableCell\n                  {...column.getHeaderProps(column.getSortByToggleProps())}\n                >\n                  {column.render(\"Header\")}\n                  <span>\n                    {column.isSorted ? (\n                      column.isSortedDesc ? (\n                        <ArrowDownwardIcon style={{ fontSize: 16 }} />\n                      ) : (\n                        <ArrowUpwardIcon style={{ fontSize: 16 }} />\n                      )\n                    ) : (\n                      \"\"\n                    )}\n                  </span>\n                </TableCell>\n              ))}\n            </TableRow>\n          ))}\n        </TableHead>\n        <TableBody {...getTableBodyProps()}>\n          {rows.map((row, i) => {\n            prepareRow(row);\n            return (\n              <TableRow {...row.getRowProps()}>\n                {row.cells.map((cell) => {\n                  return (\n                    <TableCell {...cell.getCellProps()}>\n                      {cell.render(\"Cell\")}\n                    </TableCell>\n                  );\n                })}\n              </TableRow>\n            );\n          })}\n        </TableBody>\n      </Table>\n    </TableContainer>\n  );\n}\n","import { useCallback, useState, useEffect, useRef } from \"react\";\n\nconst ReadyState = {\n  UNINSTANTIATED: -1,\n  CONNECTING: 0,\n  OPEN: 1,\n  CLOSING: 2,\n  CLOSED: 3,\n};\n\nexport default function useWebSocket(url = \"\", options = {}) {\n  const {\n    onOpen = () => {},\n    onMessage = () => {},\n    onClose = () => {},\n    onError = () => {},\n    retryCounts = 3,\n    retryInterval = 5000,\n  } = options;\n\n  const webSocketRef = useRef();\n\n  const [readyState, setReadyState] = useState();\n  const [message, setMessage] = useState();\n  const reconnectCount = useRef(0);\n\n  const send = useCallback((message) => {\n    if (\n      webSocketRef.current &&\n      webSocketRef.current.readyState === ReadyState.OPEN\n    ) {\n      webSocketRef.current.send(message);\n    }\n  }, []);\n\n  const close = useCallback(() => {\n    if (\n      webSocketRef.current &&\n      webSocketRef.current.readyState === ReadyState.OPEN\n    ) {\n      webSocketRef.current.close();\n    }\n  }, []);\n\n  const connect = useCallback(\n    (onOpen, onMessage, onClose, onError) => {\n      console.log(\"connect\");\n      webSocketRef.current = new WebSocket(url);\n      webSocketRef.current.addEventListener(\"open\", onOpen);\n      webSocketRef.current.addEventListener(\"message\", onMessage);\n      webSocketRef.current.addEventListener(\"close\", onClose);\n      webSocketRef.current.addEventListener(\"error\", onError);\n\n      return () => {\n        webSocketRef.current.close();\n        webSocketRef.current = null;\n      };\n    },\n    [url]\n  );\n\n  useEffect(() => {\n    let stale = false;\n    let removeListeners;\n    let reconnectTimeout;\n\n    const _onOpen = () => {\n      onOpen();\n      if (!stale) {\n        setReadyState(ReadyState.OPEN);\n      }\n    };\n\n    const _onMessage = (event) => {\n      onMessage(event);\n      if (!stale) {\n        setMessage(event.data);\n      }\n    };\n\n    const _onClose = () => {\n      onClose();\n      if (!stale) {\n        setReadyState(ReadyState.CLOSED);\n      }\n      if (reconnectCount.current < retryCounts) {\n        reconnectTimeout = setTimeout(() => {\n          console.log(\"retry\");\n          reconnectCount.current++;\n          removeListeners = connect(_onOpen, _onMessage, _onClose, _onError);\n        }, retryInterval);\n      }\n    };\n\n    const _onError = (event) => {\n      onError(event);\n      if (!stale) {\n        setReadyState(ReadyState.UNINSTANTIATED);\n      }\n      if (reconnectCount.current < retryCounts) {\n        reconnectTimeout = setTimeout(() => {\n          reconnectCount.current++;\n          removeListeners = connect(_onOpen, _onMessage, _onClose, _onError);\n        }, retryInterval);\n      }\n    };\n\n    removeListeners = connect(_onOpen, _onMessage, _onClose, _onError);\n\n    return () => {\n      stale = true;\n      removeListeners();\n      if (reconnectTimeout) {\n        clearTimeout(reconnectTimeout);\n      }\n    };\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [connect, retryCounts, retryInterval]);\n\n  return {\n    readyState,\n    message,\n    send,\n    close,\n  };\n}\n","import { useReducer, useCallback } from \"react\";\n\nconst INIT = \"INIT\";\nconst UPDATE = \"UPDATE\";\n\nconst InitialState = {\n  pairs: {},\n  all: new Set(),\n  bnb: new Set(),\n  btc: new Set(),\n  alts: new Set(),\n  eth: new Set(),\n  xrp: new Set(),\n  trx: new Set(),\n};\n\nfunction parsePairsData(data) {\n  const list = data.map((item) => item.s);\n  const entities = data.reduce((obj, item) => {\n    return { ...obj, [item.s]: { ...item } };\n  }, {});\n  return { list, entities };\n}\n\nfunction union(setA, setB) {\n  let _union = new Set(setA);\n  for (let elem of setB) {\n    _union.add(elem);\n  }\n  return _union;\n}\n\nfunction reducer(state, action) {\n  const { type, payload } = action;\n  switch (type) {\n    case INIT: {\n      const { list, entities } = parsePairsData(payload);\n      const bnbPairs = payload.filter((d) => d.pm === \"BNB\").map((d) => d.s);\n      const btcPairs = payload.filter((d) => d.pm === \"BTC\").map((d) => d.s);\n      const altPairs = payload.filter((d) => d.pm === \"ALTS\").map((d) => d.s);\n      const xrpPairs = payload.filter((d) => d.q === \"XRP\").map((d) => d.s);\n      const ethPairs = payload.filter((d) => d.q === \"ETH\").map((d) => d.s);\n      const trxPairs = payload.filter((d) => d.q === \"TRX\").map((d) => d.s);\n\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          ...entities,\n        },\n        all: union(state.all, new Set(list)),\n        bnb: union(state.bnb, new Set(bnbPairs)),\n        btc: union(state.btc, new Set(btcPairs)),\n        alts: union(state.alts, new Set(altPairs)),\n        eth: union(state.eth, new Set(ethPairs)),\n        xrp: union(state.xrp, new Set(xrpPairs)),\n        trx: union(state.trx, new Set(trxPairs)),\n      };\n    }\n    case UPDATE: {\n      const { list, entities } = parsePairsData(payload);\n      const bnbPairs = payload.filter((d) => d.pm === \"BNB\").map((d) => d.s);\n      const btcPairs = payload.filter((d) => d.pm === \"BTC\").map((d) => d.s);\n      const altPairs = payload.filter((d) => d.pm === \"ALTS\").map((d) => d.s);\n      const xrpPairs = payload.filter((d) => d.q === \"XRP\").map((d) => d.s);\n      const ethPairs = payload.filter((d) => d.q === \"ETH\").map((d) => d.s);\n      const trxPairs = payload.filter((d) => d.q === \"TRX\").map((d) => d.s);\n\n      return {\n        ...state,\n        pairs: {\n          ...state.pairs,\n          ...Object.keys(entities).reduce((newPairs, id) => {\n            return {\n              ...newPairs,\n              [id]: {\n                ...state.pairs[id],\n                c: entities[id].c,\n                o: entities[id].o,\n              },\n            };\n          }, {}),\n        },\n        all: union(state.all, new Set(list)),\n        bnb: union(state.bnb, new Set(bnbPairs)),\n        btc: union(state.btc, new Set(btcPairs)),\n        alts: union(state.alts, new Set(altPairs)),\n        eth: union(state.eth, new Set(ethPairs)),\n        xrp: union(state.xrp, new Set(xrpPairs)),\n        trx: union(state.trx, new Set(trxPairs)),\n      };\n    }\n    default: {\n      return state;\n    }\n  }\n}\n\nexport default function usePairsState() {\n  const [state, dispatch] = useReducer(reducer, InitialState);\n  const init = useCallback((data) => {\n    dispatch({ type: INIT, payload: data });\n  }, []);\n  const update = useCallback((data) => {\n    dispatch({ type: UPDATE, payload: data });\n  }, []);\n\n  return [state, init, update];\n}\n","import React, { useState, useMemo, useEffect, useRef } from \"react\";\nimport Container from \"@material-ui/core/Container\";\nimport Box from \"@material-ui/core/Box\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Button from \"@material-ui/core/Button\";\nimport MenuItem from \"@material-ui/core/MenuItem\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Divider from \"@material-ui/core/Divider\";\nimport ArrowDropDownIcon from \"@material-ui/icons/ArrowDropDown\";\nimport Menu from \"./components/Menu\";\nimport PairTable from \"./components/PairTable\";\nimport useWebSocket from \"./hooks/useWebSocket\";\nimport usePairState from \"./hooks/usePairsState\";\n\nfunction getPairName(row) {\n  return `${row.b}/${row.q}`;\n}\n\nfunction getPriceChange(row) {\n  const lastPrice = row.c;\n  const openPrice = row.o;\n  const change = ((lastPrice - openPrice) / openPrice) * 100;\n  return `${change.toFixed(2)}%`;\n}\n\nfunction App() {\n  const [state, init, update] = usePairState();\n  useEffect(() => {\n    let stale = false;\n\n    fetch(\n      \"https://www.binance.com/exchange-api/v1/public/asset-service/product/get-products\"\n    )\n      .then((res) => res.json())\n      .then((result) => result.data.map((d) => ({ ...d, id: d.s })))\n      .then((data) => init(data))\n      .catch(() => {\n        if (!stale) {\n          init([]);\n        }\n      });\n\n    return () => {\n      stale = true;\n    };\n  }, [init]);\n\n  const { message, readyState, close } = useWebSocket(\n    \"wss://stream.binance.com/stream?streams=!miniTicker@arr\"\n  );\n\n  const socketState = useMemo(() => {\n    if (readyState === 1) {\n      return \"Sync\";\n    } else if (readyState === 3) {\n      return \"Closed\";\n    } else if (readyState === -1) {\n      return \"Error\";\n    }\n  }, [readyState]);\n\n  useEffect(() => {\n    if (message) {\n      const data = JSON.parse(message).data;\n      update(data);\n    }\n  }, [message, update]);\n\n  const allPairs = useMemo(() => {\n    const bnbPairs = [...state.bnb].map((id) => state.pairs[id]);\n    const btcPairs = [...state.btc].map((id) => state.pairs[id]);\n    const altPairs = [...state.alts].map((id) => state.pairs[id]);\n    const xrpPairs = [...state.xrp].map((id) => state.pairs[id]);\n    const ethPairs = [...state.eth].map((id) => state.pairs[id]);\n    const trxPairs = [...state.trx].map((id) => state.pairs[id]);\n\n    return {\n      BNB: bnbPairs,\n      BTC: btcPairs,\n      ALTS: altPairs,\n      XRP: xrpPairs,\n      ETH: ethPairs,\n      TRX: trxPairs,\n    };\n  }, [state]);\n\n  const [category, setCategory] = useState(\"BTC\");\n\n  const data = useMemo(() => allPairs[category], [allPairs, category]);\n\n  const columns = useMemo(\n    () => [\n      {\n        Header: \"Pair\",\n        accessor: getPairName,\n      },\n      {\n        Header: \"Last Price\",\n        accessor: \"c\",\n      },\n      {\n        Header: \"Change\",\n        accessor: getPriceChange,\n      },\n    ],\n    []\n  );\n\n  const altMenuRef = useRef();\n\n  const [altMenuOpen, setAltMenuOpen] = useState(false);\n\n  return (\n    <Container fixed maxWidth=\"xs\" component=\"section\">\n      <Box py={1}>\n        <Grid container justify=\"space-between\">\n          <Grid item xs>\n            <Typography variant=\"h5\" component=\"h1\">\n              Market\n            </Typography>\n          </Grid>\n          <Grid item xs container justify=\"flex-end\" alignItems=\"center\">\n            <Typography variant=\"body1\" color=\"textSecondary\">\n              {socketState}\n            </Typography>\n            <Button\n              variant=\"outlined\"\n              onClick={close}\n              disabled={readyState !== 1}\n            >\n              Close\n            </Button>\n          </Grid>\n        </Grid>\n      </Box>\n      <Divider />\n      <Box py={1}>\n        <Grid container spacing={3}>\n          <Grid item xs>\n            <Button\n              color={category === \"BNB\" ? \"primary\" : \"default\"}\n              onClick={() => setCategory(\"BNB\")}\n            >\n              BNB\n            </Button>\n          </Grid>\n          <Grid item xs>\n            <Button\n              color={category === \"BTC\" ? \"primary\" : \"default\"}\n              onClick={() => setCategory(\"BTC\")}\n            >\n              BTC\n            </Button>\n          </Grid>\n          <Grid item xs>\n            <div\n              onMouseOver={() => setAltMenuOpen(true)}\n              onMouseOut={() => setAltMenuOpen(false)}\n            >\n              <Button\n                ref={altMenuRef}\n                endIcon={<ArrowDropDownIcon />}\n                onClick={() => setCategory(\"ALTS\")}\n              >\n                ALTS\n              </Button>\n              <Menu anchorRef={altMenuRef} open={altMenuOpen}>\n                <MenuItem onClick={() => setCategory(\"XRP\")}>XRP</MenuItem>\n                <MenuItem onClick={() => setCategory(\"ETH\")}>ETH</MenuItem>\n                <MenuItem onClick={() => setCategory(\"TRX\")}>TRX</MenuItem>\n              </Menu>\n            </div>\n          </Grid>\n        </Grid>\n      </Box>\n      <PairTable data={data} columns={columns} />\n    </Container>\n  );\n}\n\nexport default App;\n","const reportWebVitals = (onPerfEntry) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import(\"web-vitals\").then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}